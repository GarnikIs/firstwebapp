<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd
                                 http://www.springframework.org/schema/context
                                 http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="gar.iso.core"/>

    <beans:bean id="passwordEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <http pattern="/resources/**" security="none"/>

    <http>
        <!-- Only for Admin access -->
        <intercept-url pattern="/manage/**" access="hasAnyAuthority('ADMIN') or  hasAnyAuthority('SUPPLIER')"/>
        <!-- Only for User access -->
        <intercept-url pattern="/cart/**" access="hasAnyAuthority('USER')"/>
        <!-- Only for everyone access -->
        <intercept-url pattern="/**" access="permitAll"/>
        <form-login login-page="/login" />
        <access-denied-handler error-page="/access-denied"/>
    </http>

    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="passwordEncoder"/>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT email, password, enabled FROM user_detail WHERE email = ?"
                               authorities-by-username-query="SELECT email, role FROM user_detail WHERE email = ?"/>
        </authentication-provider>
    </authentication-manager>

</beans:beans>